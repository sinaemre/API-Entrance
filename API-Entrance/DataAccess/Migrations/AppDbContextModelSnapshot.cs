// <auto-generated />
using System;
using API_Entrance.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Entrance.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Entrance.Core.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 8, 19, 20, 6, 23, 831, DateTimeKind.Local).AddTicks(674),
                            Name = "Kişisel",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 8, 19, 20, 6, 23, 831, DateTimeKind.Local).AddTicks(759),
                            Name = "İş",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 8, 19, 20, 6, 23, 831, DateTimeKind.Local).AddTicks(760),
                            Name = "Eğitim",
                            Status = 1
                        });
                });

            modelBuilder.Entity("API_Entrance.Core.Entities.Concrete.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCompleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("TaskItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 8, 19, 20, 6, 23, 831, DateTimeKind.Local).AddTicks(1270),
                            Deadline = new DateTime(2024, 8, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Haftaya kadar 1 adet kitap bitir.",
                            IsCompleted = false,
                            Status = 1,
                            Title = "Kitap Oku"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 8, 19, 20, 6, 23, 831, DateTimeKind.Local).AddTicks(1339),
                            Deadline = new DateTime(2024, 8, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Verilen taskları tamamla!",
                            IsCompleted = false,
                            Status = 1,
                            Title = "Yazılım Projesine Bak"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 8, 19, 20, 6, 23, 831, DateTimeKind.Local).AddTicks(1343),
                            Deadline = new DateTime(2024, 8, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Yeni teknolojiler hakkında araştırma yap!",
                            IsCompleted = true,
                            Status = 1,
                            Title = "Ders Çalış"
                        });
                });

            modelBuilder.Entity("API_Entrance.Core.Entities.Concrete.TaskItem", b =>
                {
                    b.HasOne("API_Entrance.Core.Entities.Concrete.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
